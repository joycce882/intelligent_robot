C51 COMPILER V9.60.0.0   MAIN                                                              02/17/2023 10:47:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\SoftWare\keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          
   4          /*已知数据类型重新定义*/
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7          
   8          
   9          /*引脚定义*/
  10          //LCD1602
  11          #define LCD1602_DB P0 //LCD1602数据总线
  12          sbit LCD1602_RS = P3^6;  //RS端
  13          sbit LCD1602_RW = P3^5;  //RW端
  14          sbit LCD1602_EN = P3^4;  //EN端
  15          
  16          //ADC0832
  17          sbit cs  = P2^4;//片选使能，低电平有效
  18          sbit clk = P2^3;//芯片时钟输入
  19          sbit dio = P2^2;//数据输入DI与输出DO
  20          
  21          //relay
  22          sbit RELAY = P3^7;
  23          void  RELAY_Control(uint r);
  24          
  25          //延时2us
  26          void Delay_2us(void)
  27          {
  28   1        _nop_();
  29   1        _nop_();
  30   1      }
  31          /*=================================================
  32          *函数名称：Read_Busy
  33          *函数功能：判断1602液晶忙，并等待
  34          =================================================*/
  35          void Read_Busy()
  36          {
  37   1        uchar busy;
  38   1        LCD1602_DB = 0xff;//复位数据总线
  39   1        LCD1602_RS = 0;   //拉低RS
  40   1        LCD1602_RW = 1;   //拉高RW读
  41   1        do
  42   1        {
  43   2          LCD1602_EN = 1;//使能EN
  44   2          busy = LCD1602_DB;//读回数据
  45   2          LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  46   2        }while(busy & 0x80); //判断状态字BIT7位是否为1，为1则表示忙，程序等待
  47   1      }
  48          /*=================================================
  49          *函数名称：LCD1602_Write_Cmd
  50          *函数功能：写LCD1602命令
  51          *调用：Read_Busy();
  52          *输入：cmd:要写的命令
  53          =================================================*/
  54          void LCD1602_Write_Cmd(uchar cmd)
C51 COMPILER V9.60.0.0   MAIN                                                              02/17/2023 10:47:59 PAGE 2   

  55          {
  56   1        Read_Busy();   //判断忙，忙则等待
  57   1        LCD1602_RS = 0;
  58   1        LCD1602_RW = 0; //拉低RS、RW操作时序情况1602课件下中文使用说明基本操作时序章节
  59   1        LCD1602_DB = cmd;//写入命令
  60   1        LCD1602_EN = 1;  //拉高使能端 数据被传输到LCD1602内
  61   1        LCD1602_EN = 0;  //拉低使能以便于下一次产生上升沿
  62   1      }
  63          /*=================================================
  64          *函数名称：LCD1602_Write_Dat
  65          *函数功能：写LCD1602数据
  66          *调用：Read_Busy();
  67          *输入：dat：需要写入的数据
  68          =================================================*/
  69          void LCD1602_Write_Dat(uchar dat)
  70          {
  71   1        Read_Busy();
  72   1        LCD1602_RS = 1;
  73   1        LCD1602_RW = 0;
  74   1        LCD1602_DB = dat;
  75   1        LCD1602_EN = 1;
  76   1        LCD1602_EN = 0;
  77   1      }
  78          
  79          /*=================================================
  80          *函数名称：LCD1602_Dis_Str
  81          *函数功能：在指定位置显示字符串
  82          *调用：LCD1602_Write_Cmd(); LCD1602_Write_Dat();
  83          *输入：x：要显示的横坐标取值0-40，y：要显示的行坐标取值0-1（0为第一行,1为第二行）
  84              *str：需要显示的字符串
  85          =================================================*/
  86          void LCD1602_Dis_Str(uchar x, uchar y, uchar *str)
  87          {
  88   1        if(y) x |= 0x40;
  89   1        x |= 0x80;
  90   1        LCD1602_Write_Cmd(x);
  91   1        while(*str != '\0')
  92   1        {
  93   2          LCD1602_Write_Dat(*str++);
  94   2        }
  95   1      }
  96          /*=================================================
  97          *函数名称：Init_LCD1602
  98          *函数功能：1602初始化
  99          *调用： LCD1602_Write_Cmd();
 100          =================================================*/
 101          void Init_LCD1602()
 102          {
 103   1        LCD1602_Write_Cmd(0x38); // 设置16*2显示，5*7点阵，8位数据接口
 104   1        LCD1602_Write_Cmd(0x0c); //开显示
 105   1        LCD1602_Write_Cmd(0x06); //读写一字节后地址指针加1
 106   1        LCD1602_Write_Cmd(0x01); //清除显示
 107   1      }
 108          /*****************************************
 109          函数简介：获取ADC0832数据
 110          函数名称：ADC_read_data(bit channel)
 111          参数说明：ch为入口参数，ch=0选择通道0，ch=1选择通道1
 112          函数返回：返回读取到的二进制ADC数据，格式为unsigned char
 113                当返回一直0时，转换数据有误
 114          ******************************************/
 115          uchar ADC_read_data(bit channel)
 116          {
C51 COMPILER V9.60.0.0   MAIN                                                              02/17/2023 10:47:59 PAGE 3   

 117   1        uchar i,dat0=0,dat1=0;
 118   1        //------第1次下降沿之前di置高，启动信号---------
 119   1      
 120   1        cs=0;     //片选信号置低，启动AD转换芯片
 121   1        clk=0;      //时钟置低平
 122   1        
 123   1        dio=1;      //开始信号为高电平
 124   1        Delay_2us();
 125   1        clk=1;      //产生一个正脉冲,在时钟上升沿，输入开始信号（DI=1）
 126   1        Delay_2us();
 127   1          clk=0;      //第1个时钟下降沿
 128   1        dio=1;
 129   1        Delay_2us();
 130   1        
 131   1        clk=1;        // 第2个下降沿输入DI=1，表示双通道单极性输入
 132   1        Delay_2us();   
 133   1        //------在第2个下降沿，模拟信号输入模式选择（1：单模信号，0：双模差分信号）---------    
 134   1        clk=0;  
 135   1        dio=channel;         // 第3个下降沿,设置DI，选择通道;
 136   1        Delay_2us();
 137   1        clk=1;
 138   1        Delay_2us();
 139   1      
 140   1         //------在第3个下降沿，模拟信号输入通道选择（1：通道CH1，0：通道CH0）------------  
 141   1        
 142   1        clk=0;
 143   1        dio=1;          //第四个下降沿之前，DI置高，准备接收数 
 144   1        Delay_2us();  
 145   1        for(i=0;i<8;i++)                 //第4~11共8个下降沿读数据（MSB->LSB）
 146   1        {
 147   2          clk=1;
 148   2          Delay_2us();
 149   2          clk=0;
 150   2          Delay_2us();
 151   2          dat0=dat0<<1|dio;
 152   2        }
 153   1        for(i=0;i<8;i++)                 //第11~18共8个下降沿读数据（LSB->MSB）
 154   1        {
 155   2          dat1=dat1|((uchar)(dio)<<i);
 156   2          clk=1;
 157   2          Delay_2us();
 158   2          clk=0;
 159   2          Delay_2us();
 160   2        } 
 161   1        cs=1;         
 162   1        return (dat0==dat1)?dat0:0;     //判断dat0与dat1是否相等
 163   1      }
 164          
 165          
 166          void RELAY_Control(uint r){
 167   1        if(r == 1 ){RELAY = 1 ;}
 168   1      else RELAY = 0 ;
 169   1      }
 170          
 171          void main()
 172          {
 173   1        uchar adc = 0;
 174   1        uint humidity = 0;
 175   1        uchar LCD_buffer[16] = {"humidity:"};
 176   1        Init_LCD1602();//1602初始化
 177   1        while(1)
 178   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              02/17/2023 10:47:59 PAGE 4   

 179   2          adc = ADC_read_data(0);//读取adc值
 180   2          humidity = adc * 500.0 / 255;//将adc值换算成湿度，公式需修改
 181   2          if(humidity < 55) RELAY_Control(0);    //当湿度，，控制继电器，，
 182   2          LCD1602_Dis_Str(0, 0, &LCD_buffer[0]);  //显示字符串
 183   2          LCD1602_Dis_Str(0, 1, &humidity);       //显示字符串
*** WARNING C182 IN LINE 183 OF main.c: pointer to different objects
 184   2        }
 185   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
